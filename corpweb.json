{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation Template for 2 EC2 instances behind an ALB",
  "Parameters": {
    "InstanceType": {
      "Description": "EC2 instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "t2.small"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type."
    },
    "KeyPair": {
      "Description": "Name of an existing EC2 KeyPair for SSH access",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be a valid EC2 KeyPair."
    },
    "YourIp": {
      "Description": "Your public IP address for SSH access",
      "Type": "String",
      "Default": "0.0.0.0/0",
      "ConstraintDescription": "Must be a valid IP address in CIDR notation."
    }
  },
  "Resources": {
    "EngineeringVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "Tags": [
          {
            "Key": "Name",
            "Value": "EngineeringVpc"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "EngineeringVpc" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "EngineeringVpc" },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicSubnet1"
          }
        ]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "EngineeringVpc" },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicSubnet2"
          }
        ]
      }
    },
    "WebserversSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Ref": "EngineeringVpc" },
        "GroupDescription": "Enable HTTP and SSH access",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": { "Ref": "YourIp" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "Web1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Ref": "InstanceType" },
        "SecurityGroupIds": [{ "Ref": "WebserversSG" }],
        "SubnetId": { "Ref": "PublicSubnet1" },
        "KeyName": { "Ref": "KeyPair" },
        "ImageId": "ami-01cc34ab2709337aa",
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": ["", [
              "#!/bin/bash\n",
              "yum update -y\n",
              "yum install -y git httpd php\n",
              "service httpd start\n",
              "chkconfig httpd on\n",
              "aws s3 cp s3://seis665-public/index.php /var/www/html/"
            ]]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Webserver1"
          }
        ]
      }
    },
    "Web2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Ref": "InstanceType" },
        "SecurityGroupIds": [{ "Ref": "WebserversSG" }],
        "SubnetId": { "Ref": "PublicSubnet2" },
        "KeyName": { "Ref": "KeyPair" },
        "ImageId": "ami-01cc34ab2709337aa",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Webserver2"
          }
        ]
      }
    },
    "EngineeringLB": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Subnets": [
          { "Ref": "PublicSubnet1" },
          { "Ref": "PublicSubnet2" }
        ],
        "SecurityGroups": [{ "Ref": "WebserversSG" }]
      }
    },
    "EngineeringTG": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "VpcId": { "Ref": "EngineeringVpc" },
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "instance",
        "HealthCheckPath": "/",
        "Targets": [
          { "Id": { "Ref": "Web1" } },
          { "Id": { "Ref": "Web2" } }
        ]
      }
    },
    "Listener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": { "Ref": "EngineeringTG" }
          }
        ],
        "LoadBalancerArn": { "Ref": "EngineeringLB" },
        "Port": 80,
        "Protocol": "HTTP"
      }
    }
  },
  "Outputs": {
    "WebUrl": {
      "Description": "Load balancer DNS Name",
      "Value": {
        "Fn::GetAtt": ["EngineeringLB", "DNSName"]
      }
    }
  }
}
